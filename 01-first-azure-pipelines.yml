# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

parameters:
  - name: type
    displayName: "Environment Name"
    type: string
    default: "dev"
    values:
    - "dev"
    - "test"
    - "prod"
    - "dr" 
  
  
  - name: destroy    
    displayName: "Destroy (Warning: Set to TRUE only if you want layer(s) destroyed)"
    type: boolean
    default: false
    values:
    - true
    - false

trigger:
  - none

pool:
  vmImage: ubuntu-latest

# Pipelines > Stages > Jobs > Tasks(Steps)

stages:
- stage: Script1
  displayName: 'Run a one-line script'
  jobs:
  - job: Build
    steps: 
    - script: echo Job1 - Hello, world, changed!

- ${{ eq(parameters.destroy, true) }}:
  - stage: Script2
    displayName: 'Run a multi-line script'
    jobs:
    - job: Build
      steps:
      - script: |
          echo Add other tasks to build, test, and deploy your project.
          echo See https://aka.ms/yaml
          echo more information

- stage: Script3
  displayName: 'Test Condition'
  jobs:
  - job: Build
    steps:
    - script: |
        echo "Output: ${{ ne(parameters.destroy, true) }}"
# jobs:
# - job: Job1
#   steps:
#   - script: echo Job1 - Hello, world, changed!
#     displayName: 'Run a one-line script'
#   - script: |
#       echo Add other tasks to build, test, and deploy your project.
#       echo See https://aka.ms/yaml
#       echo more information
#     displayName: 'Run a multi-line script'
#   - script: |
#       echo "Output: ${{ ne(parameters.type, 'prod') }}"
#     displayName: "Test Conditional"

# - job: Job2
#   dependsOn: Job1
#   steps:
#     - script: echo Job2!
#       displayName: "Run a one-line script"

# - job: Job3
#   dependsOn: Job2
#   steps:
#     - script: echo Job3!
#       displayName: "Run a one-line script"

# - job: Job4
#   dependsOn:
#   - Job2
#   - Job3
#   steps:
#     - script: echo Job3!
#       displayName: "Run a one-line script"
